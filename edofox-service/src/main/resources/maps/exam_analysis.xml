<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rns.web.edo.service.dao.EdoTestsDao">
	<!-- result maps -->
	<resultMap id="examAnalysis" type="com.rns.web.edo.service.domain.EdoTest">

		<result column="testId" property="id" />
		<result column="exam_name" property="name" />
		<result column="no_of_questions" property="noOfQuestions" />
		<result column="total_marks" property="totalMarks" />
		<result column="duration" property="duration" />
		<result column="studentsAppeared" property="analysis.studentsAppeared" />
		<result column="avgScore" property="analysis.averageScore" />
		<result column="avgCorrect" property="analysis.averageCorrect" />
		<result column="avgSolved" property="analysis.averageAttempted" />

	</resultMap>
	
	<resultMap id="questionAnalysis" type="com.rns.web.edo.service.domain.EdoQuestion">
		<result column="question_id" property="qn_id" />
		<result column="question" property="question" />
		<result column="option1" property="option1" />
		<result column="option2" property="option2" />
		<result column="option3" property="option3" />
		<result column="option4" property="option4" />
		<result column="correct_answer" property="correctAnswer"/>
		<result column="weightage" property="weightage"/>
		<result column="negative_marks" property="negativeMarks"/>
		<result column="question_img_url" property="questionImageUrl" />
		<result column="option1_img_url" property="option1ImageUrl" />
		<result column="option2_img_url" property="option2ImageUrl" />
		<result column="option3_img_url" property="option3ImageUrl" />
		<result column="option4_img_url" property="option4ImageUrl" />
		<result column="optionCount" property="analysis.optionCount" />
		<result column="option_selected" property="analysis.optionSelected" />
		<result column="subject" property="subject" />
		<result column="correctCount" property="analysis.correctCount"/>
		<result column="wrongCount" property="analysis.wrongCount"/>
		<result column="solvedCount" property="analysis.solvedCount"/>
		
	</resultMap>
	
	
	<select id="getExamAnalysis" resultMap="examAnalysis" parameterType="Integer">
	select * from exam_details left join 
(select  count(stu_id) as studentsAppeared, avg(score) as avgScore, avg(correct_ans) as avgCorrect, avg(solved) as avgSolved, exam_id as testId 
from exam_results group by exam_id) as result on exam_details.id = result.testId where exam_details.id = ${value};

	</select>
	
	<select id="getQuestionAnalysis" resultMap="questionAnalysis" parameterType="Integer">
		select * from test_questions_map
		join test_questions on test_questions.id = test_questions_map.question_id
		join test_subjects on test_questions.subject_id = test_subjects.subject_id
		left join (select count(*) as optionCount,test_id, question_id, option_selected from test_result group by option_selected, test_id, question_id) as result
		on result.question_id = test_questions_map.question_id where test_questions_map.test_id = ${value};
	</select>
	
	<select id="getQuestionCorrectness" resultMap="questionAnalysis" parameterType="Integer">
		select count(*) as solvedCount,test_result.question_id,correctQuery.correctCount, wrongQuery.wrongCount from test_result 
        left join 
        (select count(*) as correctCount, question_id from test_result 
        where test_id = ${value} AND option_selected != '' AND marks &gt; 0
        group by question_id) as correctQuery on test_result.question_id = correctQuery.question_id
        left join
        (select count(*) as wrongCount, question_id from test_result 
        where test_id = ${value} AND option_selected != '' AND marks &lt;= 0
        group by question_id) as wrongQuery on test_result.question_id = wrongQuery.question_id
        where test_result.test_id = ${value} AND test_result.option_selected != ''
        group by test_result.question_id
	</select>
	
	<resultMap id="students" type="com.rns.web.edo.service.domain.EdoStudent">

		<result column="studentId" property="id" />
		<result column="name" property="name" />
		<result column="email" property="email" />
		<result column="roll_number" property="rollNo" />
		<result column="mobile_number" property="phone"/>
		<result column="caste_category" property="casteCategory" />
		<result column="score" property="analysis.score" />
		<result column="correct_ans" property="analysis.correctCount" />
		<result column="solved" property="analysis.solvedCount" />
		<result column="flagged" property="analysis.flaggedCount" />
		<result column="parent_mobile_no" property="parentMobileNo"/>
		<result column="school_district" property="schoolDistrict"/>
		<result column="course_name" property="course"/>
		<result column="division_name" property="division"/>
		
	</resultMap>
	
	
	
	<select id="getStudentResults" resultMap="students" parameterType="Integer">
		select *,student_information.id as studentId, concat(first_name, ' ', last_name) as name from exam_results join student_information 
		on exam_results.stu_id = student_information.id 
		left join courses on student_information.class = courses.id
		left join divisions on student_information.division = divisions.id
		where exam_results.exam_id = ${value} order by exam_results.score desc
	</select>
	
	<resultMap id="subjectScore" type="com.rns.web.edo.service.domain.EdoTestStudentMap">

		<result column="student_id" property="student.id" />
		<result column="score" property="subjectScore.score" />
		<result column="subject_name" property="subjectScore.subject" />
		<result column="totalQuestions" property="subjectScore.totalQuestions" />
		<result column="negativeScore" property="subjectScore.deductions" />
		<result column="solved" property="subjectScore.solvedCount" />
		<result column="totalDeductions" property="subjectScore.deductionsCount" />
		<result column="incorrects" property="subjectScore.incorrectCount" />
		
	</resultMap>
	
	<!-- <select id="getSubjectwiseScore" resultMap="subjectScore" parameterType="Integer">
		SELECT sum(marks) as score, test_subjects.subject, student_id FROM `test_result` 
		join test_questions on test_result.question_id = test_questions.id 
		join test_subjects on test_questions.subject_id = test_subjects.subject_id 
		where test_id = ${value} GROUP BY test_result.student_id,test_questions.subject_id
	</select> -->
	
	<select id="getSubjectwiseScore" resultMap="subjectScore" parameterType="Integer">
		SELECT sum(marks) as score, count(*) as solved, subjects.subject_name, test_result.student_id,totalQuestions.totalQuestions,totalWrong.totalDeductions,totalWrong.negativeScore,totalIncorrect.incorrects FROM `test_result` 
		join test_questions on test_result.question_id = test_questions.id 
		join subjects on test_questions.subject_id = subjects.id 
        left join (select count(*) as totalQuestions,subject_id from test_questions_map join test_questions on test_questions_map.question_id = test_questions.id where test_id = ${value} group by subject_id) as totalQuestions on totalQuestions.subject_id = subjects.id 
        left join (select count(*) as totalDeductions, sum(marks) as negativeScore,subject_id,student_id from test_result join test_questions on test_result.question_id = test_questions.id where test_id = ${value} AND marks &lt; 0 group by student_id, subject_id) as totalWrong on totalWrong.student_id = test_result.student_id AND  totalWrong.subject_id = subjects.id
		left join (select count(*) as incorrects, subject_id,student_id from test_result join test_questions on test_result.question_id = test_questions.id where test_id = ${value} AND marks &lt;= 0 AND length(option_selected) &gt; 0 group by student_id, subject_id) as totalIncorrect on totalIncorrect.student_id = test_result.student_id AND  totalIncorrect.subject_id = subjects.id
        where test_id = ${value} AND length(option_selected) > 0 GROUP BY test_result.student_id,test_questions.subject_id
	
	</select>
	
	<select id="getSubjectwiseScoreStudent" resultMap="subjectScore" parameterType="map">
		SELECT sum(marks) as score, subjects.subject_name, student_id FROM `test_result` 
		join test_questions on test_result.question_id = test_questions.id 
		join subjects on test_questions.subject_id = subjects.id 
		where test_id = ${test} AND student_id = ${student} GROUP BY test_result.student_id,test_questions.subject_id
	</select>
	
	<select id="getTestSubjects" resultMap="subjects" parameterType="Integer">
	SELECT subject_name,test_questions.subject_id FROM `test_questions_map` 
	join test_questions on test_questions_map.question_id = test_questions.id 
	join subjects on test_questions.subject_id = subjects.id 
	where test_id = ${value} group by test_questions.subject_id order by subject_name asc
	</select>
	

</mapper>