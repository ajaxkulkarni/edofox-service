<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rns.web.edo.service.dao.EdoTestsDao">
	<!-- result maps -->
	<resultMap id="packages" type="com.rns.web.edo.service.domain.EDOPackage">
		<result column="packageId" property="id" />
		<result column="package_name" property="name" />
		<result column="price" property="price" />
		<result column="institute_id" property="institute.id" />
		<result column="institute_name" property="institute.name" />
		<result column="offline_price" property="offlinePrice" />

	</resultMap>

	<select id="getInstituePackages" resultMap="packages"
		parameterType="Integer">
		select *, packages.id as packageId from institute join packages on institute.id =
		packages.institute_id
		where institute.status = 'Active' AND
		institute.id =${value};

	</select>

	<insert id="saveStudent" parameterType="com.rns.web.edo.service.domain.EdoStudent"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into student
		(name, email, mobile_no, password, roll_no, gender, school_district, date_of_birth, caste_category )
		values('${name}', '${email}', '${phone}', '${password}', '${rollNo}', '${gender}', '${schoolDistrict}', '${dob}', '${casteCategory}');
	</insert>

	<insert id="createStudentPackage" parameterType="com.rns.web.edo.service.domain.EdoStudent"
		useGeneratedKeys="true" keyProperty="transactionId" keyColumn="id">
		insert into student_institute
		(student_id,institute_id,package_id,status,exam_mode,payment_mode) values
		<foreach item="package" index="index" collection="packages"
			open="(" separator="),(" close=")">
			${id},${package.institute.id}, ${package.id}, 'Created', '${examMode}', '${payment.mode}'
		</foreach>
		<!-- (${id},${currentPackage.institute.id}, ${currentPackage.id}, 'Created', '${examMode}', '${payment.mode}')
		ON DUPLICATE KEY UPDATE exam_mode = '${examMode}', payment_mode = '${payment.mode}' -->
	</insert>
	
	<delete id="deleteExistingPackages" parameterType="com.rns.web.edo.service.domain.EdoStudent" >
		delete from student_institute where 
		<foreach item="package" index="index" collection="packages"
			open="(" separator=") OR (" close=")">
			student_id = ${id} AND package_id = ${package.id}
		</foreach>
	</delete>

	<update id="updatePaymentId" parameterType="com.rns.web.edo.service.domain.EdoStudent">
		UPDATE student_institute set payment_id = '${payment.paymentId}' WHERE student_id =
		${id} AND status != 'Completed' AND package_id IN
		<foreach item="package" index="index" collection="packages"
			open="(" separator="," close=")">
			${package.id}
		</foreach>

	</update>

	<update id="updatePayment" parameterType="com.rns.web.edo.service.domain.EdoPaymentStatus">
		UPDATE student_institute set status = '${responseText}' WHERE payment_id = '${paymentId}';
	</update>
	
	<resultMap id="studentInfo" type="com.rns.web.edo.service.domain.EdoStudent">
		<result column="id" property="id" />
		<result column="name" property="name" />
		<result column="email" property="email" />
		<result column="mobile_no" property="phone" />
		<result column="package_name" property="currentPackage.name"/>				
	</resultMap>
	
	
	<select id="getStudentByPhoneNumber" parameterType="com.rns.web.edo.service.domain.EdoPaymentStatus" resultMap="studentInfo" >
		select * from student where mobile_no = '${phone}'
	</select>
	
	<select id="getStudentById" parameterType="Integer" resultMap="studentInfo" >
		select * from student where id = ${value}
	</select>
	
	<select id="getAllStudents"  parameterType="Integer" resultMap="studentInfo" >
		select * from student join student_institute on student.id = student_institute.student_id 
		where institute_id = ${value}
	</select>
	
	<select id="getTestPackage"  parameterType="Integer" resultMap="packages" >
		select * from test join packages on test.package_id = packages.id where test.test_id = ${value}
	</select>
	
	<select id="getStudentByPayment" parameterType="String" resultMap="studentInfo" >
		SELECT * FROM student_institute 
		join student on student.id = student_institute.student_id
		join packages on student_institute.package_id = packages.id
		where student_institute.payment_id = '${value}';
	</select>
	
</mapper>