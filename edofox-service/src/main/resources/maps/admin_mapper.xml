<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.rns.web.edo.service.dao.EdoTestsDao">


	<insert id="saveQuestion" parameterType="com.rns.web.edo.service.domain.EdoQuestion" useGeneratedKeys="true" keyProperty="qn_id" keyColumn="id">
		insert into test_questions (question,option1,option2,option3,option4, subject_id, correct_answer, solution, weightage, negative_marks) 
		values ("${question}", "${option1}", "${option2}", "${option3}" , "${option4}", "${subjectId}", "${correctAnswer}", "${solution}", ${weightage}, ${negativeMarks});
	</insert>
	
	<insert id="saveTestQuestion" parameterType="com.rns.web.edo.service.domain.EdoTest">
		insert into test_questions_map (test_id, question_id, question_number) 
		values (${id}, ${currentQuestion.qn_id}, ${currentQuestion.id});
	</insert>
	
	<update id="updateSolution" parameterType="com.rns.web.edo.service.domain.EdoQuestion">
		UPDATE test_questions set correct_answer = "${correctAnswer}", solution = "${solution}"  WHERE id = ${qn_id}
	</update>
	
	<insert id="saveInstitute" parameterType="com.rns.web.edo.service.domain.EDOInstitute" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into institute (institute_name, created_date, status, expiry_date, contact_number, purchase, max_students, storage_quota, email) 
		values ('${name}', CURRENT_TIMESTAMP, 'Active', '${expiryDateString}', '${contact}', '${purchase}', ${maxStudents}, ${storageQuota}, '${email}');
	</insert>
	
	<insert id="createAdminLogin" parameterType="com.rns.web.edo.service.domain.EDOInstitute" useGeneratedKeys="true" keyProperty="adminId" keyColumn="id">
		insert into admin (username, password, institute_id, created_date, expiry_date) 
		values ('${username}', '${password}', ${id}, CURRENT_TIMESTAMP, '${expiryDateString}');
	</insert>
	
	<insert id="createPackage" parameterType="com.rns.web.edo.service.domain.EDOPackage" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		insert into packages (package_name, institute_id, created_date, price) values('${name}', ${institute.id}, CURRENT_TIMESTAMP, 0);
	</insert>
	
	<update id="updatePackage" parameterType="com.rns.web.edo.service.domain.EDOPackage">
		update packages set 
		<if test="disabled == null">
		package_name = '${name}' 
		</if>
		<if test="disabled != null">
		is_disabled = ${disabled}
		</if>
		where id = ${id}
	</update>
	
	<select id="isAdminLogin" parameterType="com.rns.web.edo.service.domain.EDOInstitute" resultType="Integer">
		select count(*) from admin where username like '${username}';
	</select>
	
	<select id="getPackage" parameterType="Integer" resultMap="packages">
		select * from packages where id = ${value};
	</select>
	
	<update id="deductQuota" parameterType="com.rns.web.edo.service.domain.EDOInstitute" >
		update institute set storage_quota = (storage_quota - ${storageQuota}) where id = ${id};
	</update>

	<update id="addQuota" parameterType="com.rns.web.edo.service.domain.EDOInstitute" >
		update institute set storage_quota = (storage_quota + ${storageQuota}) where id = ${id};
	</update>
	
	<select id="getStudentStats" parameterType="Integer" resultMap="institute">
	select count(distinct student_id) as currentCount,institute_name,max_students from student_institute 
	join institute on student_institute.institute_id = institute.id
	where institute_id = ${value};
	</select>
	
	<insert id="upgradeInstitute" parameterType="com.rns.web.edo.service.domain.EDOInstitute">
		update institute set 
		purchase = '${purchase}',
		storage_quota = ${storageQuota}, 
		max_students = ${maxStudents}, 
		expiry_date = '${expiryDateString}'
		where id = ${id};
	</insert>

</mapper>